Some weights of the model checkpoint at bert-base-cased were not used when initializing BertForMaskedLM: ['cls.seq_relationship.bias', 'cls.seq_relationship.weight']
- This IS expected if you are initializing BertForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of the model checkpoint at bert-base-cased were not used when initializing BertForMaskedLM: ['cls.seq_relationship.bias', 'cls.seq_relationship.weight']
- This IS expected if you are initializing BertForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
---------------------------------------- bert-base-cased-anchor_type: Coordinate-scorer_anchor:probAvg-op:concate_or_single ----------------------------------------
{
    "IsA": {
        "relation": "IsA",
        "def_sap": [
            "A [X] is a [MASK].",
            "A [X] is an [MASK].",
            "An [X] is a [MASK].",
            "An [X] is an [MASK]."
        ],
        "def_dap": [
            "A [X] or [Z] is a [MASK].",
            "A [X] or [Z] is an [MASK].",
            "An [X] or [Z] is a [MASK].",
            "An [X] or [Z] is an [MASK]."
        ],
        "lsp_sap": [
            "[MASK] such as [X], ",
            "[MASK], such as [X], ",
            "[MASK], such as [X] and  ",
            "[MASK], such as [X] or ",
            "such [MASK] as [X], ",
            ", [X] or other [MASK]",
            ", [X] and other [MASK]",
            "[MASK], including [X], ",
            "[MASK], including [X] and",
            "[MASK], including [X] or",
            "[MASK], especillay [X], ",
            "[MASK], especillay [X] and ",
            "[MASK], especillay [X] or "
        ],
        "lsp_dap": [
            "[MASK] such as [X] and [Z]",
            "[MASK] such as [X] or [Z]",
            "such [MASK] as [X] and [Z]",
            "such [MASK] as [X] or [Z]",
            "[X], [Z] or other [MASK]",
            "[X], [Z] and other [MASK]",
            "[MASK] including [X] and [Z]",
            "[MASK] including [X] or [Z]",
            "[MASK], especially [X] and [Z] ",
            "[MASK], especially [X] or [Z] "
        ],
        "use_dap": true,
        "anchor_target": "[X]",
        "anchor_lsp_sap": [
            "such as [X] and [MASK],",
            "such as [X] or [MASK],",
            "such as [X], [MASK],",
            "such as [X], [MASK], and",
            ", such as [X] and [MASK],",
            ", such as [X] or [MASK], ",
            "as [X] and [MASK]",
            "as [X] or [MASK]",
            "as [X], [MASK],",
            "[X], [MASK] or other",
            "[X], [MASK] and other",
            ", including [X] and [MASK]",
            ", including [X] or [MASK]",
            ", including [X], [MASK],",
            ", including [X], [MASK], and",
            ", including [X], [MASK], or",
            ", especially [X] and [MASK] ,",
            ", especially [X] or [MASK] ,",
            ", especially [X], [MASK] ,",
            ", especially [X], [MASK] , and"
        ]
    }
}
Processing IsA ... data/clsb/blank//IsA.jsonl
#Test_instances: 522
	 step1: get anchors (fill and filter)
--- def_sap
--- lsp_sap
input_word: aeroplane token: aircraft
path_score 0 <class 'int'>
new_score 0.18197841849178076 <class 'float'>
input_word: aeroplane token: glider
path_score 0.3333333333333333 <class 'float'>
new_score 0.08365682985535577 <class 'float'>
input_word: aeroplane token: helicopter
path_score 0.3333333333333333 <class 'float'>
new_score 0.08648026166095708 <class 'float'>
input_word: aeroplane token: parachute
path_score 0.1 <class 'float'>
new_score 0.053641776911293466 <class 'float'>
input_word: aeroplane token: helicopters
path_score 0.3333333333333333 <class 'float'>
new_score 0.03397744718628625 <class 'float'>
input_word: aeroplane token: airplane
path_score 1 <class 'int'>
new_score 0.0645073636520752 <class 'float'>
input_word: aeroplane token: jet
path_score 0.0625 <class 'float'>
new_score 0.029152669260899225 <class 'float'>
input_word: aeroplane token: bomber
path_score 0.125 <class 'float'>
new_score 0.026049185046253517 <class 'float'>
input_word: aeroplane token: bombers
path_score 0.125 <class 'float'>
new_score 0.016842235578224063 <class 'float'>
input_word: aeroplane token: rocket
path_score 0.16666666666666666 <class 'float'>
new_score 0.01557539084127971 <class 'float'>
input_word: aeroplane token: motorcycle
path_score 0.1111111111111111 <class 'float'>
new_score 0.015447433106601238 <class 'float'>
input_word: aeroplane token: automobile
path_score 0.1111111111111111 <class 'float'>
new_score 0.03359479298815131 <class 'float'>
input_word: aeroplane token: aviation
path_score 0.0625 <class 'float'>
new_score 0.00687094044405967 <class 'float'>
input_word: aeroplane token: engine
path_score 0.125 <class 'float'>
new_score 0.005144187423866242 <class 'float'>
input_word: aeroplane token: plane
path_score 1 <class 'int'>
new_score 0.001983105088584125 <class 'float'>
input_word: aeroplane token: pilot
path_score 0.08333333333333333 <class 'float'>
new_score 0.01978948712348938 <class 'float'>
input_word: aeroplane token: later
path_score 0 <class 'int'>
new_score 0.012010081671178341 <class 'float'>
input_word: aeroplane token: boat
path_score 0.16666666666666666 <class 'float'>
new_score 0.015687089413404465 <class 'float'>
input_word: aeroplane token: ship
path_score 0.16666666666666666 <class 'float'>
new_score 0.014203530736267567 <class 'float'>
input_word: aeroplane token: motorcycles
path_score 0.1111111111111111 <class 'float'>
new_score 0.01090450119227171 <class 'float'>
input_word: aeroplane token: fighter
path_score 0.125 <class 'float'>
new_score 0.012280302587896585 <class 'float'>
input_word: aeroplane token: especially
path_score 0 <class 'int'>
new_score 0.017726141959428787 <class 'float'>
input_word: alligator token: bear
path_score 0.1111111111111111 <class 'float'>
new_score 0.06549890224491 <class 'float'>
input_word: alligator token: seal
path_score 0.2 <class 'float'>
new_score 0.034607783764262094 <class 'float'>
input_word: alligator token: turtle
path_score 0.14285714285714285 <class 'float'>
new_score 0.07622340011099975 <class 'float'>
input_word: alligator token: fish
path_score 0.14285714285714285 <class 'float'>
new_score 0.08026817472418771 <class 'float'>
input_word: alligator token: tiger
path_score 0.1 <class 'float'>
new_score 0.042552651571375985 <class 'float'>
input_word: alligator token: shark
path_score 0.1 <class 'float'>
new_score 0.034145645797252655 <class 'float'>
input_word: alligator token: crab
path_score 0.1 <class 'float'>
new_score 0.03295112106974961 <class 'float'>
input_word: alligator token: deer
path_score 0.09090909090909091 <class 'float'>
new_score 0.03130096854874864 <class 'float'>
input_word: alligator token: salmon
path_score 0.1111111111111111 <class 'float'>
new_score 0.03084208896117551 <class 'float'>
input_word: alligator token: bass
path_score 0.08333333333333333 <class 'float'>
new_score 0.025191692635416985 <class 'float'>
input_word: alligator token: cat
path_score 0.1 <class 'float'>
new_score 0.02872166261076927 <class 'float'>
input_word: alligator token: bull
path_score 0.125 <class 'float'>
new_score 0.024078466929495335 <class 'float'>
input_word: alligator token: fox
path_score 0.2 <class 'float'>
new_score 0.03102400340139866 <class 'float'>
input_word: alligator token: mole
path_score 0.1111111111111111 <class 'float'>
new_score 0.025315594859421253 <class 'float'>
input_word: alligator token: snake
path_score 0.25 <class 'float'>
new_score 0.03450328324522291 <class 'float'>
input_word: alligator token: trout
path_score 0.1111111111111111 <class 'float'>
new_score 0.03081163577735424 <class 'float'>
input_word: alligator token: diver
path_score 0.1 <class 'float'>
new_score 0.0013525153044611216 <class 'float'>
input_word: alligator token: lizard
path_score 0.2 <class 'float'>
new_score 0.01063091038460178 <class 'float'>
input_word: alligator token: frog
path_score 0.14285714285714285 <class 'float'>
new_score 0.06374245136976242 <class 'float'>
input_word: alligator token: duck
path_score 0.1 <class 'float'>
new_score 0.02231994830071926 <class 'float'>
input_word: alligator token: monkey
path_score 0.1111111111111111 <class 'float'>
new_score 0.01485386909916997 <class 'float'>
input_word: alligator token: whale
path_score 0.1 <class 'float'>
new_score 0.028307173401117325 <class 'float'>
input_word: alligator token: shrimp
path_score 0.09090909090909091 <class 'float'>
new_score 0.021069037728011608 <class 'float'>
input_word: alligator token: turtles
path_score 0.14285714285714285 <class 'float'>
new_score 0.03338966146111488 <class 'float'>
input_word: alligator token: rabbit
path_score 0.2 <class 'float'>
new_score 0.02106170356273651 <class 'float'>
input_word: alligator token: maybe
path_score 0 <class 'int'>
new_score 0.012556485831737518 <class 'float'>
input_word: ambulance token: police
path_score 0.05555555555555555 <class 'float'>
new_score 0.041382500405112904 <class 'float'>
input_word: ambulance token: fire
path_score 0.07142857142857142 <class 'float'>
new_score 0.07287418944594849 <class 'float'>
input_word: ambulance token: transport
path_score 0.125 <class 'float'>
new_score 0.024812649186060298 <class 'float'>
input_word: ambulance token: buses
path_score 0.3333333333333333 <class 'float'>
new_score 0.031379902424911656 <class 'float'>
input_word: ambulance token: helicopter
path_score 0.1 <class 'float'>
new_score 0.036943716171663254 <class 'float'>
input_word: ambulance token: bus
path_score 0.3333333333333333 <class 'float'>
new_score 0.026266781458010275 <class 'float'>
input_word: ambulance token: aircraft
path_score 0.125 <class 'float'>
new_score 0.020363154510656994 <class 'float'>
input_word: ambulance token: radio
path_score 0.1 <class 'float'>
new_score 0.01457341993227601 <class 'float'>
input_word: ambulance token: train
path_score 0.1111111111111111 <class 'float'>
new_score 0.023722709994763135 <class 'float'>
input_word: ambulance token: car
path_score 0.16666666666666666 <class 'float'>
new_score 0.031465017078776976 <class 'float'>
input_word: ambulance token: taxi
path_score 0.3333333333333333 <class 'float'>
new_score 0.020532081524531048 <class 'float'>
input_word: ambulance token: vehicle
path_score 0.1111111111111111 <class 'float'>
new_score 0.025008315841356914 <class 'float'>
input_word: ambulance token: telephone
path_score 0.1 <class 'float'>
new_score 0.018462052568793297 <class 'float'>
input_word: ambulance token: truck
path_score 0.25 <class 'float'>
new_score 0.014887467958033085 <class 'float'>
input_word: ambulance token: motorcycles
path_score 0.25 <class 'float'>
new_score 0.028016057331115007 <class 'float'>
input_word: ambulance token: helicopters
path_score 0.1 <class 'float'>
new_score 0.017132466658949852 <class 'float'>
input_word: ambulance token: driver
path_score 0.07692307692307693 <class 'float'>
new_score 0.008942581313021947 <class 'float'>
input_word: ambulance token: service
path_score 0.08333333333333333 <class 'float'>
new_score 0.0010581319802440703 <class 'float'>
input_word: ambulance token: passenger
path_score 0.07142857142857142 <class 'float'>
new_score 0.004358664977189619 <class 'float'>
input_word: ambulance token: hospital
path_score 0.08333333333333333 <class 'float'>
new_score 0.007626554841408506 <class 'float'>
input_word: ambulance token: later
path_score 0 <class 'int'>
new_score 0.013607117347419262 <class 'float'>
input_word: ambulance token: pilot
path_score 0.08333333333333333 <class 'float'>
new_score 0.012618313543498516 <class 'float'>
input_word: ambulance token: doctor
path_score 0.06666666666666667 <class 'float'>
new_score 0.008733092807233334 <class 'float'>
input_word: ambulance token: conductor
path_score 0.1111111111111111 <class 'float'>
new_score 0.007542913779616356 <class 'float'>
input_word: ambulance token: wounded
path_score 0.0625 <class 'float'>
new_score 0.005479880608618259 <class 'float'>
input_word: ambulance token: motorcycle
path_score 0.25 <class 'float'>
new_score 0.01757552536825339 <class 'float'>
input_word: ambulance token: plane
path_score 0.1 <class 'float'>
new_score 0.015282917767763138 <class 'float'>
input_word: ambulance token: maintenance
path_score 0.05263157894736842 <class 'float'>
new_score 0.0031522938515990973 <class 'float'>
input_word: ambulance token: generator
path_score 0.1 <class 'float'>
new_score 0.018481120467185974 <class 'float'>
input_word: ambulance token: medical
path_score 0.047619047619047616 <class 'float'>
new_score 0.017500488087534904 <class 'float'>
input_word: ambulance token: water
path_score 0.1 <class 'float'>
new_score 0.012186159379780293 <class 'float'>
input_word: ambulance token: ferry
path_score 0.1 <class 'float'>
new_score 0.012793568894267082 <class 'float'>
input_word: ambulance token: trains
path_score 0.1111111111111111 <class 'float'>
new_score 0.022655675187706947 <class 'float'>
input_word: anchor token: cable
path_score 0.3333333333333333 <class 'float'>
new_score 0.031061688221858015 <class 'float'>
input_word: anchor token: reporter
path_score 0.07692307692307693 <class 'float'>
new_score 0.07353820935823023 <class 'float'>
input_word: anchor token: receiver
path_score 0.14285714285714285 <class 'float'>
new_score 0.009776444872841239 <class 'float'>
input_word: anchor token: camera
path_score 0.1111111111111111 <class 'float'>
new_score 0.01868689029943198 <class 'float'>
input_word: anchor token: crew
path_score 0.08333333333333333 <class 'float'>
new_score 0.015112228070696196 <class 'float'>
input_word: anchor token: mast
path_score 0.1 <class 'float'>
new_score 0.01777144538407976 <class 'float'>
input_word: anchor token: antenna
path_score 0.14285714285714285 <class 'float'>
new_score 0.010202617074052492 <class 'float'>
input_word: anchor token: line
path_score 0.14285714285714285 <class 'float'>
new_score 0.010018781351391226 <class 'float'>
input_word: anchor token: beam
path_score 0.125 <class 'float'>
new_score 0.010475508170202374 <class 'float'>
input_word: anchor token: rope
path_score 0.25 <class 'float'>
new_score 0.021035760774144104 <class 'float'>
input_word: anchor token: chain
path_score 0.3333333333333333 <class 'float'>
new_score 0.014274149977912506 <class 'float'>
input_word: anchor token: net
path_score 0.14285714285714285 <class 'float'>
new_score 0.013613230859239897 <class 'float'>
input_word: anchor token: hook
path_score 0.3333333333333333 <class 'float'>
new_score 0.015546990558505058 <class 'float'>
input_word: anchor token: pole
path_score 0.125 <class 'float'>
new_score 0.012279301571349302 <class 'float'>
input_word: anchor token: wire
path_score 0.3333333333333333 <class 'float'>
new_score 0.012686077505350113 <class 'float'>
input_word: anchor token: pilot
path_score 0.1111111111111111 <class 'float'>
new_score 0.007550633396022022 <class 'float'>
input_word: anchor token: clock
path_score 0.1111111111111111 <class 'float'>
new_score 0.009392917156219482 <class 'float'>
input_word: anchor token: helicopter
path_score 0.08333333333333333 <class 'float'>
new_score 0.010279850754886865 <class 'float'>
input_word: anchor token: logo
path_score 0.07142857142857142 <class 'float'>
new_score 0.016424119798466565 <class 'float'>
input_word: anchor token: radio
path_score 0.1111111111111111 <class 'float'>
new_score 0.012126642558723689 <class 'float'>
input_word: anchor token: float
path_score 0.125 <class 'float'>
new_score 0.013641941826790571 <class 'float'>
input_word: anchor token: correspondent
path_score 0.2 <class 'float'>
new_score 0.02367843087995425 <class 'float'>
input_word: anchor token: contributor
path_score 0.16666666666666666 <class 'float'>
new_score 0.0008623064495623112 <class 'float'>
input_word: anchor token: host
path_score 0.14285714285714285 <class 'float'>
new_score 0.033514354377985 <class 'float'>
input_word: anchor token: producer
path_score 0.14285714285714285 <class 'float'>
new_score 0.021664613857865334 <class 'float'>
input_word: anchor token: director
path_score 0.1111111111111111 <class 'float'>
new_score 0.008509703795425594 <class 'float'>
input_word: anchor token: writer
path_score 0.2 <class 'float'>
new_score 0.013672981411218643 <class 'float'>
input_word: anchor token: presenter
path_score 0.2 <class 'float'>
new_score 0.01234800461679697 <class 'float'>
input_word: anchor token: photographer
path_score 0.125 <class 'float'>
new_score 0.011565913911908865 <class 'float'>
input_word: anchor token: voice
path_score 0.14285714285714285 <class 'float'>
new_score 0.01139853149652481 <class 'float'>
input_word: anchor token: cord
path_score 0.25 <class 'float'>
new_score 0.014954933896660805 <class 'float'>
input_word: anchor token: post
path_score 0.2 <class 'float'>
new_score 0.010449856985360384 <class 'float'>
input_word: anchor token: balloon
path_score 0.1111111111111111 <class 'float'>
new_score 0.009739763103425503 <class 'float'>
input_word: anchor token: remote
path_score 0.16666666666666666 <class 'float'>
new_score 0.011425571516156197 <class 'float'>
input_word: anchor token: satellite
path_score 0.14285714285714285 <class 'float'>
new_score 0.008055459707975388 <class 'float'>
input_word: anchor token: magazine
path_score 0.2 <class 'float'>
new_score 0.008781125769019127 <class 'float'>
input_word: anchor token: weather
path_score 0.07692307692307693 <class 'float'>
new_score 0.016554525587707758 <class 'float'>
input_word: anchor token: driver
path_score 0.14285714285714285 <class 'float'>
new_score 0.008802706375718117 <class 'float'>
input_word: anchor token: news
path_score 0.08333333333333333 <class 'float'>
new_score 0.014425418339669704 <class 'float'>
input_word: anchor token: studio
path_score 0.09090909090909091 <class 'float'>
new_score 0.00761812087148428 <class 'float'>
input_word: anchor token: tower
path_score 0.1111111111111111 <class 'float'>
new_score 0.011010729242116213 <class 'float'>
input_word: anchor token: sail
path_score 0.1111111111111111 <class 'float'>
new_score 0.010894005186855793 <class 'float'>
input_word: ant token: spider
path_score 0.16666666666666666 <class 'float'>
new_score 0.0345668112499612 <class 'float'>
input_word: ant token: bee
path_score 0.3333333333333333 <class 'float'>
new_score 0.029886720178183168 <class 'float'>
input_word: ant token: mouse
path_score 0.1111111111111111 <class 'float'>
new_score 0.021719373801412683 <class 'float'>
input_word: ant token: plant
path_score 0.125 <class 'float'>
new_score 0.029965469613671303 <class 'float'>
input_word: ant token: ants
path_score 1 <class 'int'>
new_score 0.02647264200641075 <class 'float'>
input_word: ant token: insect
path_score 0.0625 <class 'float'>
new_score 0.029296033683099916 <class 'float'>
input_word: ant token: bug
path_score 0.25 <class 'float'>
new_score 0.021583477811266977 <class 'float'>
input_word: ant token: beetle
path_score 0.25 <class 'float'>
new_score 0.01832803080861385 <class 'float'>
input_word: ant token: fly
path_score 0.2 <class 'float'>
new_score 0.0174265936948359 <class 'float'>
input_word: ant token: lizard
path_score 0.08333333333333333 <class 'float'>
new_score 0.01934862043708563 <class 'float'>
input_word: ant token: moth
path_score 0.2 <class 'float'>
new_score 0.012316047737840563 <class 'float'>
input_word: ant token: bird
path_score 0.1111111111111111 <class 'float'>
new_score 0.011143765722711882 <class 'float'>
input_word: ant token: var
path_score 0.05263157894736842 <class 'float'>
new_score 0.012900631874799728 <class 'float'>
input_word: ant token: flower
path_score 0.08333333333333333 <class 'float'>
new_score 0.013598085381090641 <class 'float'>
input_word: ant token: fungus
path_score 0.125 <class 'float'>
new_score 0.012745087966322899 <class 'float'>
input_word: ant token: bees
path_score 0.3333333333333333 <class 'float'>
new_score 0.013747314922511578 <class 'float'>
input_word: ant token: snake
path_score 0.1 <class 'float'>
new_score 0.012792930006980896 <class 'float'>
input_word: apple token: cherry
path_score 0.3333333333333333 <class 'float'>
new_score 0.12426399902495391 <class 'float'>
input_word: apple token: grape
path_score 0.3333333333333333 <class 'float'>
new_score 0.06978265022238096 <class 'float'>
input_word: apple token: fruit
path_score 0.08333333333333333 <class 'float'>
new_score 0.03159369750708146 <class 'float'>
input_word: apple token: lemon
path_score 0.25 <class 'float'>
new_score 0.03888605547447999 <class 'float'>
input_word: apple token: apples
path_score 1 <class 'int'>
new_score 0.030968209129891226 <class 'float'>
input_word: apple token: potato
path_score 0.16666666666666666 <class 'float'>
new_score 0.032084464325299974 <class 'float'>
input_word: apple token: grapes
path_score 0.3333333333333333 <class 'float'>
new_score 0.02647610740470035 <class 'float'>
input_word: apple token: banana
path_score 0.3333333333333333 <class 'float'>
new_score 0.019547398388385772 <class 'float'>
input_word: apple token: lime
path_score 0.25 <class 'float'>
new_score 0.01907558599486947 <class 'float'>
input_word: apple token: tomato
path_score 0.16666666666666666 <class 'float'>
new_score 0.022116659039800816 <class 'float'>
input_word: apple token: cheese
path_score 0.2 <class 'float'>
new_score 0.015052108094096184 <class 'float'>
input_word: apple token: jam
path_score 0.07142857142857142 <class 'float'>
new_score 0.01821082830429077 <class 'float'>
input_word: apple token: red
path_score 0.09090909090909091 <class 'float'>
new_score 0.0004286842595320195 <class 'float'>
input_word: apple token: honey
path_score 0.09090909090909091 <class 'float'>
new_score 0.021886474452912807 <class 'float'>
input_word: apple token: tree
path_score 0.07142857142857142 <class 'float'>
new_score 0.009504269808530807 <class 'float'>
input_word: apple token: orange
path_score 0.25 <class 'float'>
new_score 0.021467959508299828 <class 'float'>
input_word: apple token: pepper
path_score 0.16666666666666666 <class 'float'>
new_score 0.022669043391942978 <class 'float'>
input_word: apple token: leaves
path_score 0.16666666666666666 <class 'float'>
new_score 0.002078986493870616 <class 'float'>
input_word: apple token: vegetables
path_score 0.25 <class 'float'>
new_score 0.0014216334093362093 <class 'float'>
input_word: apple token: bean
path_score 0.2 <class 'float'>
new_score 0.013957599177956581 <class 'float'>
input_word: apple token: potatoes
path_score 0.16666666666666666 <class 'float'>
new_score 0.02048560045659542 <class 'float'>
input_word: apple token: tobacco
path_score 0.1111111111111111 <class 'float'>
new_score 0.017894426360726357 <class 'float'>
input_word: apple token: berries
path_score 0.3333333333333333 <class 'float'>
new_score 0.020319342613220215 <class 'float'>
input_word: apricot token: coffee
path_score 0.2 <class 'float'>
new_score 0.059969062014715746 <class 'float'>
input_word: apricot token: chocolate
path_score 0.2 <class 'float'>
new_score 0.05285051775475343 <class 'float'>
input_word: apricot token: apple
path_score 0.3333333333333333 <class 'float'>
new_score 0.04993492963590792 <class 'float'>
input_word: apricot token: orange
path_score 0.25 <class 'float'>
new_score 0.05685366430649689 <class 'float'>
input_word: apricot token: cotton
path_score 0.14285714285714285 <class 'float'>
new_score 0.028862271302690107 <class 'float'>
input_word: apricot token: tobacco
path_score 0.125 <class 'float'>
new_score 0.023471783380955458 <class 'float'>
input_word: apricot token: apples
path_score 0.3333333333333333 <class 'float'>
new_score 0.02791391289792955 <class 'float'>
input_word: apricot token: cherry
path_score 0.3333333333333333 <class 'float'>
new_score 0.03241822725305191 <class 'float'>
input_word: apricot token: lemon
path_score 0.25 <class 'float'>
new_score 0.026128436749180157 <class 'float'>
input_word: apricot token: tea
path_score 0.14285714285714285 <class 'float'>
new_score 0.021898583276197314 <class 'float'>
input_word: apricot token: mint
path_score 0.125 <class 'float'>
new_score 0.03294353491880677 <class 'float'>
input_word: apricot token: rice
path_score 0.09090909090909091 <class 'float'>
new_score 0.015068701468408108 <class 'float'>
input_word: apricot token: garlic
path_score 0.1 <class 'float'>
new_score 0.021341822110116482 <class 'float'>
input_word: apricot token: cheese
path_score 0.2 <class 'float'>
new_score 0.017929671332240105 <class 'float'>
input_word: apricot token: maple
path_score 0.25 <class 'float'>
new_score 0.024782323588927586 <class 'float'>
input_word: apricot token: white
path_score 0.16666666666666666 <class 'float'>
new_score 0.005944337957771495 <class 'float'>
input_word: apricot token: red
path_score 0.25 <class 'float'>
new_score 0.0044049515927326865 <class 'float'>
input_word: apricot token: green
path_score 0.25 <class 'float'>
new_score 0.009987671030103229 <class 'float'>
input_word: apricot token: black
path_score 0.16666666666666666 <class 'float'>
new_score 0.000618293765000999 <class 'float'>
input_word: apricot token: wine
path_score 0.16666666666666666 <class 'float'>
new_score 0.015880460230012734 <class 'float'>
input_word: apricot token: blue
path_score 0.25 <class 'float'>
new_score 0.011524342000484467 <class 'float'>
input_word: apricot token: beer
path_score 0.08333333333333333 <class 'float'>
new_score 0.010222730226814747 <class 'float'>
input_word: apricot token: yellow
path_score 0.25 <class 'float'>
new_score 0.00949446763843298 <class 'float'>
input_word: apricot token: grape
path_score 0.3333333333333333 <class 'float'>
new_score 0.03785140812397003 <class 'float'>
input_word: apricot token: olive
path_score 0.25 <class 'float'>
new_score 0.024482110887765883 <class 'float'>
input_word: apricot token: corn
path_score 0.14285714285714285 <class 'float'>
new_score 0.00032386460225097835 <class 'float'>
input_word: apricot token: tomato
path_score 0.16666666666666666 <class 'float'>
new_score 0.017765022814273834 <class 'float'>
input_word: apricot token: potatoes
path_score 0.16666666666666666 <class 'float'>
new_score 0.014808152802288532 <class 'float'>
input_word: apricot token: honey
path_score 0.09090909090909091 <class 'float'>
new_score 0.014265504665672779 <class 'float'>
input_word: arm token: leg
path_score 0.3333333333333333 <class 'float'>
new_score 0.2155791919457873 <class 'float'>
input_word: arm token: legs
path_score 0.3333333333333333 <class 'float'>
new_score 0.06030802188130716 <class 'float'>
input_word: arm token: shoulder
path_score 0.3333333333333333 <class 'float'>
new_score 0.08719262860617355 <class 'float'>
input_word: arm token: neck
path_score 0.2 <class 'float'>
new_score 0.031663983343885496 <class 'float'>
input_word: arm token: hand
path_score 0.2 <class 'float'>
new_score 0.040813800377209726 <class 'float'>
input_word: arm token: head
path_score 0.3333333333333333 <class 'float'>
new_score 0.02959141674052392 <class 'float'>
input_word: arm token: torso
path_score 0.16666666666666666 <class 'float'>
new_score 0.027666196537514526 <class 'float'>
input_word: arm token: body
path_score 0.25 <class 'float'>
new_score 0.04104843130335212 <class 'float'>
input_word: arm token: knee
path_score 0.3333333333333333 <class 'float'>
new_score 0.03516225749626756 <class 'float'>
input_word: arm token: foot
path_score 0.2 <class 'float'>
new_score 0.03522531293770846 <class 'float'>
input_word: arm token: wrist
path_score 0.1111111111111111 <class 'float'>
new_score 0.024813669009341136 <class 'float'>
input_word: arm token: elbow
path_score 0.3333333333333333 <class 'float'>
new_score 0.019040076062083244 <class 'float'>
input_word: arm token: chest
path_score 0.2 <class 'float'>
new_score 0.027844163899620373 <class 'float'>
input_word: arm token: thigh
path_score 0.3333333333333333 <class 'float'>
new_score 0.024060615338385105 <class 'float'>
input_word: arm token: forearm
path_score 0.3333333333333333 <class 'float'>
new_score 0.023481396958231926 <class 'float'>
input_word: arm token: shoulders
path_score 0.3333333333333333 <class 'float'>
new_score 0.012153353231648603 <class 'float'>
input_word: arm token: hands
path_score 0.2 <class 'float'>
new_score 0.02615881711244583 <class 'float'>
input_word: arm token: bone
path_score 0.1111111111111111 <class 'float'>
new_score 0.025750868022441864 <class 'float'>
input_word: arm token: hair
path_score 0.16666666666666666 <class 'float'>
new_score 0.0189953800290823 <class 'float'>
input_word: armchair token: chair
path_score 0.06666666666666667 <class 'float'>
new_score 0.2506809246321944 <class 'float'>
input_word: armchair token: chairs
path_score 0.06666666666666667 <class 'float'>
new_score 0.09453202206641435 <class 'float'>
input_word: armchair token: sofa
path_score 0.25 <class 'float'>
new_score 0.12791825005072444 <class 'float'>
input_word: armchair token: couch
path_score 0.25 <class 'float'>
new_score 0.0818972809733275 <class 'float'>
input_word: armchair token: desk
path_score 0.16666666666666666 <class 'float'>
new_score 0.0537930798665103 <class 'float'>
input_word: armchair token: table
path_score 0.2 <class 'float'>
new_score 0.051568935671821234 <class 'float'>
input_word: armchair token: bed
path_score 0.16666666666666666 <class 'float'>
new_score 0.024936629521350066 <class 'float'>
input_word: armchair token: seat
path_score 0.1 <class 'float'>
new_score 0.013684620498679578 <class 'float'>
input_word: armchair token: bench
path_score 0.25 <class 'float'>
new_score 0.010860063239104219 <class 'float'>
input_word: armchair token: stool
path_score 0.25 <class 'float'>
new_score 0.010827965917997062 <class 'float'>
input_word: armchair token: lounge
path_score 0.25 <class 'float'>
new_score 0.008368191891349852 <class 'float'>
input_word: armchair token: throne
path_score 0.25 <class 'float'>
new_score 0.007056663278490305 <class 'float'>
input_word: armchair token: maybe
path_score 0 <class 'int'>
new_score 0.016310814302414656 <class 'float'>
input_word: armchair token: blanket
path_score 0.1111111111111111 <class 'float'>
new_score 0.00654820678755641 <class 'float'>
input_word: armchair token: tables
path_score 0.2 <class 'float'>
new_score 0.00845313755174478 <class 'float'>
input_word: armchair token: piano
path_score 0.1 <class 'float'>
new_score 0.008030275309768816 <class 'float'>
input_word: armchair token: television
path_score 0.1 <class 'float'>
new_score 0.007648240774869919 <class 'float'>
input_word: armchair token: furniture
path_score 0 <class 'int'>
new_score 0.006646637863013893 <class 'float'>
input_word: armchair token: gallery
path_score 0.1 <class 'float'>
new_score 0.0010594413615763187 <class 'float'>
input_word: armchair token: wheelchair
path_score 0.3333333333333333 <class 'float'>
new_score 0.0025360884610563517 <class 'float'>
input_word: armchair token: fireplace
path_score 0.08333333333333333 <class 'float'>
new_score 0.010588016360998154 <class 'float'>
input_word: armchair token: yes
path_score 0.05 <class 'float'>
new_score 0.02753494121134281 <class 'float'>
input_word: armchair token: especially
path_score 0 <class 'int'>
new_score 0.024333380162715912 <class 'float'>
input_word: arrow token: bow
path_score 0.25 <class 'float'>
new_score 0.41953432724786627 <class 'float'>
input_word: arrow token: spear
path_score 0.25 <class 'float'>
new_score 0.10791654997121762 <class 'float'>
input_word: arrow token: sword
path_score 0.25 <class 'float'>
new_score 0.060654164230647054 <class 'float'>
input_word: arrow token: shield
path_score 0.1 <class 'float'>
new_score 0.02924747168435715 <class 'float'>
input_word: arrow token: bolt
path_score 0.1111111111111111 <class 'float'>
new_score 0.008938756111698845 <class 'float'>
input_word: arrow token: stick
path_score 0.125 <class 'float'>
new_score 0.013338993055125077 <class 'float'>
input_word: arrow token: gun
path_score 0.25 <class 'float'>
new_score 0.006295393961905079 <class 'float'>
input_word: arrow token: fire
path_score 0.1 <class 'float'>
new_score 0.00874466828203627 <class 'float'>
input_word: arrow token: stone
path_score 0.1111111111111111 <class 'float'>
new_score 0.008544048960579352 <class 'float'>
input_word: arrow token: dagger
path_score 0.2 <class 'float'>
new_score 0.010063329653348774 <class 'float'>
input_word: arrow token: hammer
path_score 0.125 <class 'float'>
new_score 0.008119022357277572 <class 'float'>
input_word: arrow token: dart
path_score 0.3333333333333333 <class 'float'>
new_score 0.008542336290702224 <class 'float'>
input_word: arrow token: shot
path_score 0.3333333333333333 <class 'float'>
new_score 0.015541080851107836 <class 'float'>
input_word: arrow token: bullet
path_score 0.3333333333333333 <class 'float'>
new_score 0.011401599273085594 <class 'float'>
input_word: arrow token: arrows
path_score 1 <class 'int'>
new_score 0.015384299505967647 <class 'float'>
input_word: arrow token: heart
path_score 0.09090909090909091 <class 'float'>
new_score 0.009190244600176811 <class 'float'>
input_word: arrow token: foot
path_score 0.14285714285714285 <class 'float'>
new_score 0.009255507960915565 <class 'float'>
input_word: arrow token: bird
path_score 0.1 <class 'float'>
new_score 0.00785494945012033 <class 'float'>
input_word: arrow token: compass
path_score 0.16666666666666666 <class 'float'>
new_score 0.008976348210126162 <class 'float'>
input_word: arrow token: shields
path_score 0.1 <class 'float'>
new_score 0.0029377946630120277 <class 'float'>
input_word: arrow token: head
path_score 0.3333333333333333 <class 'float'>
new_score 0.0026346417143940926 <class 'float'>
input_word: arrow token: drums
path_score 0.125 <class 'float'>
new_score 0.0023979833349585533 <class 'float'>
input_word: arrow token: horse
path_score 0.1 <class 'float'>
new_score 0.003564815386198461 <class 'float'>
input_word: arrow token: ball
path_score 0.25 <class 'float'>
new_score 0.0037116091698408127 <class 'float'>
input_word: arrow token: rifle
path_score 0.16666666666666666 <class 'float'>
new_score 0.005488543771207333 <class 'float'>
input_word: arrow token: bows
path_score 0.25 <class 'float'>
new_score 0.021188808605074883 <class 'float'>
input_word: arrow token: pistol
path_score 0.16666666666666666 <class 'float'>
new_score 0.0029363881330937147 <class 'float'>
relation: IsA 	 use_dap: True
	 step2: insert anchors
	 step3: fill mask in dap anchors
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:01,  6.06it/s] 20%|██        | 2/10 [00:00<00:01,  6.56it/s] 30%|███       | 3/10 [00:00<00:01,  6.73it/s] 40%|████      | 4/10 [00:00<00:00,  6.88it/s] 50%|█████     | 5/10 [00:00<00:00,  6.97it/s] 60%|██████    | 6/10 [00:00<00:00,  7.02it/s] 70%|███████   | 7/10 [00:01<00:00,  6.79it/s] 80%|████████  | 8/10 [00:01<00:00,  6.89it/s] 90%|█████████ | 9/10 [00:01<00:00,  6.93it/s]100%|██████████| 10/10 [00:01<00:00,  6.94it/s]100%|██████████| 10/10 [00:01<00:00,  6.86it/s]
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:06,  1.45it/s] 20%|██        | 2/10 [00:01<00:05,  1.45it/s] 30%|███       | 3/10 [00:02<00:04,  1.52it/s] 40%|████      | 4/10 [00:02<00:03,  1.55it/s] 50%|█████     | 5/10 [00:03<00:03,  1.57it/s] 60%|██████    | 6/10 [00:03<00:02,  1.58it/s] 70%|███████   | 7/10 [00:04<00:01,  1.52it/s] 80%|████████  | 8/10 [00:05<00:01,  1.54it/s] 90%|█████████ | 9/10 [00:05<00:00,  1.55it/s]100%|██████████| 10/10 [00:06<00:00,  1.57it/s]100%|██████████| 10/10 [00:06<00:00,  1.54it/s]
   uuid  sub_label                                          obj_label                                   masked_sentences                                       feature_type relation  sub_position                                            def_sap                                            def_dap                                            lsp_sap                                            lsp_dap                                     anchor_lsp_sap                                  obj_mask_sentence                            obj_mask_sentence_score                                   obj_mask_def_sap                             obj_mask_def_sap_score                                   obj_mask_lsp_sap                             obj_mask_lsp_sap_score                   subj_anchors                                 subj_anchors_score                           def_dap_with_subj_anchor                           lsp_dap_with_subj_anchor                subj_anchors_combined  \
0     0  aeroplane                                          [vehicle]                        [An aeroplane is a [MASK].]                                        [taxonomic]      IsA             3  [An aeroplane is a [MASK]., An aeroplane is an...  [An aeroplane or [Z] is a [MASK]., An aeroplan...  [[MASK] such as aeroplane, , [MASK], such as a...  [[MASK] such as aeroplane and [Z], [MASK] such...  [such as aeroplane and [MASK],, such as aeropl...  [aircraft, glider, vehicle, helicopter, plane,...  {'aircraft': 0.16430030763149261, 'glider': 0....  [aircraft, glider, automobile, vehicle, airpla...  {'aircraft': 0.40856676548719406, 'glider': 0....  [aircraft, things, devices, weapons, systems, ...  {'aircraft': 0.12224372875223505, 'things': 0....  [airplane, plane, helicopter]  {'airplane': 1.0645073636520752, 'plane': 1.00...  [An aeroplane or airplane is a [MASK]., An aer...  [[MASK] such as aeroplane and airplane, [MASK]...  aeroplane airplane plane helicopter   
1     1  alligator  [reptile, animal, carnivore, predator, amphibian]  [An alligator is a [MASK]., An alligator is an...  [taxonomic, taxonomic, functional, taxonomic, ...      IsA             3  [An alligator is a [MASK]., An alligator is an...  [An alligator or [Z] is a [MASK]., An alligato...  [[MASK] such as alligator, , [MASK], such as a...  [[MASK] such as alligator and [Z], [MASK] such...  [such as alligator and [MASK],, such as alliga...  [animal, fish, predator, species, turtle, aqua...  {'animal': 0.6988474130630493, 'fish': 0.13977...  [animal, fish, predator, species, turtle, aqua...  {'animal': 0.6988474130630493, 'fish': 0.13977...  [things, animals, fish, wildlife, species, cre...  {'things': 0.08186548948287964, 'animals': 0.0...             [snake, seal, fox]  {'snake': 0.2845032832452229, 'seal': 0.234607...  [An alligator or snake is a [MASK]., An alliga...  [[MASK] such as alligator and snake, [MASK] su...             alligator snake seal fox   
2     2  ambulance                                     [vehicle, van]                        [An ambulance is a [MASK].]                             [taxonomic, taxonomic]      IsA             3  [An ambulance is a [MASK]., An ambulance is an...  [An ambulance or [Z] is a [MASK]., An ambulanc...  [[MASK] such as ambulance, , [MASK], such as a...  [[MASK] such as ambulance and [Z], [MASK] such...  [such as ambulance and [MASK],, such as ambula...  [vehicle, service, hospital, car, unit, transp...  {'vehicle': 0.12793311476707458, 'service': 0....  [automobile, vehicle, service, hospital, car, ...  {'automobile': 0.14307419955730438, 'vehicle':...  [things, transport, services, vehicles, emerge...  {'things': 0.19632790982723236, 'transport': 0...             [buses, bus, taxi]  {'buses': 0.364713235758245, 'bus': 0.35960011...  [An ambulance or buses is a [MASK]., An ambula...  [[MASK] such as ambulance and buses, [MASK] su...             ambulance buses bus taxi   
3     3     anchor                                           [symbol]                           [An anchor is a [MASK].]                                    [encyclopaedic]      IsA             3  [An anchor is a [MASK]., An anchor is an [MASK].]  [An anchor or [Z] is a [MASK]., An anchor or [...  [[MASK] such as anchor, , [MASK], such as anch...  [[MASK] such as anchor and [Z], [MASK] such as...  [such as anchor and [MASK],, such as anchor or...  [vessel, person, ship, mast, boat, device, bui...  {'vessel': 0.039877112954854965, 'person': 0.0...  [object, vessel, person, ship, mast, boat, dev...  {'object': 0.046549707651138306, 'vessel': 0.0...  [things, devices, terms, items, examples, equi...  {'things': 0.058324928395450115, 'devices': 0....           [cable, hook, chain]  {'cable': 0.3643950215551913, 'hook': 0.348880...  [An anchor or cable is a [MASK]., An anchor or...  [[MASK] such as anchor and cable, [MASK] such ...              anchor cable hook chain   
4     4        ant                  [insect, animal, pest, arthropod]        [An ant is a [MASK]., An ant is an [MASK].]   [taxonomic, taxonomic, encyclopaedic, taxonomic]      IsA             3        [An ant is a [MASK]., An ant is an [MASK].]  [An ant or [Z] is a [MASK]., An ant or [Z] is ...  [[MASK] such as ant, , [MASK], such as ant, , ...  [[MASK] such as ant and [Z], [MASK] such as an...  [such as ant and [MASK],, such as ant or [MASK...  [insect, species, animal, noun, person, beetle...  {'insect': 0.1050584465265274, 'species': 0.05...  [insect, species, animal, noun, person, beetle...  {'insect': 0.1050584465265274, 'species': 0.05...  [things, creatures, species, ants, animals, in...  {'things': 0.1056923692425092, 'creatures': 0....              [ants, bee, bees]  {'ants': 1.0264726420064108, 'bee': 0.36322005...  [An ant or ants is a [MASK]., An ant or bee is...  [[MASK] such as ant and ants, [MASK] such as a...                    ant ants bee bees   

                                    obj_mask_def_dap                             obj_mask_def_dap_score                                   obj_mask_lsp_dap                             obj_mask_lsp_dap_score                               obj_mask_def_sap_dap                               obj_mask_def_lsp_sap                               obj_mask_lsp_sap_dap  
0  [aircraft, helicopter, vehicle, automobile, ai...  {'aircraft': 0.4268033231298129, 'helicopter':...  [things, aircraft, applications, examples, dev...  {'things': 0.22823457419872284, 'aircraft': 0....  [aircraft, vehicle, helicopter, glider, automo...  [aircraft, glider, things, vehicle, helicopter...  [things, aircraft, applications, devices, weap...  
1  [seal, animal, lizard, snake, predator, dog, s...  {'seal': 0.8914724588394165, 'animal': 0.78702...  [animals, species, wildlife, things, fish, cre...  {'animals': 0.17038859222203684, 'species': 0....  [animal, seal, fish, predator, species, lizard...  [animal, fish, species, things, animals, wildl...  [animals, wildlife, things, fish, species, cre...  
2  [vehicle, automobile, ambulance, taxi, transpo...  {'vehicle': 0.49254974714131095, 'automobile':...  [services, things, vehicles, transport, equipm...  {'services': 0.12944457712794907, 'things': 0....  [vehicle, automobile, ambulance, car, service,...  [things, vehicle, transport, services, vehicle...  [things, services, vehicles, transport, equipm...  
3  [anchor, device, object, chain, cable, hook, a...  {'anchor': 0.43665458019822834, 'device': 0.18...  [tv, terms, features, devices, things, televis...  {'tv': 0.09910601004958153, 'terms': 0.0829899...  [anchor, device, object, chain, cable, hook, a...  [things, devices, terms, vessel, person, items...  [terms, things, devices, tv, equipment, featur...  
4  [insect, ant, species, animal, organism, bee, ...  {'insect': 0.27742667496204376, 'ant': 0.25533...  [things, animals, species, creatures, insects,...  {'things': 0.1229106976118471, 'animals': 0.09...  [insect, species, ant, animal, organism, bee, ...  [species, things, insect, creatures, animal, a...  [things, species, creatures, animals, ants, in...  
               mask_type  p@1  p@10 relation   mrr  mAP@1    mAP@10
0          mask_sentence  0.4   0.7      IsA  50.3    0.5  0.548333
1           mask_def_sap  0.2   0.7      IsA  39.2    0.3  0.454167
2           mask_lsp_sap  0.0   0.3      IsA   8.1    0.0  0.093333
3           mask_def_dap  0.2   0.8      IsA  40.3    0.2  0.408333
4           mask_lsp_dap  0.1   0.2      IsA  13.3    0.1  0.133333
5       mask_def_sap_dap  0.4   0.8      IsA  53.7    0.5  0.550952
6       mask_def_lsp_sap  0.2   0.6      IsA  32.1    0.3  0.352738
7       mask_lsp_sap_dap  0.1   0.3      IsA  13.4    0.1  0.134286
8   mask_def_sap_uniform  0.2   0.7      IsA  39.2    0.3  0.454167
9   mask_lsp_sap_uniform  0.2   0.5      IsA  26.7    0.2  0.265893
10  mask_def_dap_uniform  0.2   0.8      IsA  40.3    0.2  0.408333
11  mask_lsp_dap_uniform  0.2   0.6      IsA  30.3    0.3  0.395000
save log/bert-base-cased/blank/df_all_use_global_dap_True_anchor_type_Coordinate_concate_or_single_max_anchor_num_3_anchor_scorer_probAvg.csv
save log/bert-base-cased/blank/exp_data_results_anchor_type_Coordinate_concate_or_single_max_anchor_num_3_anchor_scorer_probAvg.csv
Some weights of the model checkpoint at bert-base-cased were not used when initializing BertForMaskedLM: ['cls.seq_relationship.bias', 'cls.seq_relationship.weight']
- This IS expected if you are initializing BertForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of the model checkpoint at bert-base-cased were not used when initializing BertForMaskedLM: ['cls.seq_relationship.bias', 'cls.seq_relationship.weight']
- This IS expected if you are initializing BertForMaskedLM from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForMaskedLM from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
---------------------------------------- bert-base-cased-anchor_type: Coordinate-scorer_anchor:probAvg-op:concate_or_single ----------------------------------------
{
    "IsA": {
        "relation": "IsA",
        "def_sap": [
            "A [X] is a [MASK].",
            "A [X] is an [MASK].",
            "An [X] is a [MASK].",
            "An [X] is an [MASK]."
        ],
        "def_dap": [
            "A [X] or [Z] is a [MASK].",
            "A [X] or [Z] is an [MASK].",
            "An [X] or [Z] is a [MASK].",
            "An [X] or [Z] is an [MASK]."
        ],
        "lsp_sap": [
            "[MASK] such as [X], ",
            "[MASK], such as [X], ",
            "[MASK], such as [X] and  ",
            "[MASK], such as [X] or ",
            "such [MASK] as [X], ",
            ", [X] or other [MASK]",
            ", [X] and other [MASK]",
            "[MASK], including [X], ",
            "[MASK], including [X] and",
            "[MASK], including [X] or",
            "[MASK], especillay [X], ",
            "[MASK], especillay [X] and ",
            "[MASK], especillay [X] or "
        ],
        "lsp_dap": [
            "[MASK] such as [X] and [Z]",
            "[MASK] such as [X] or [Z]",
            "such [MASK] as [X] and [Z]",
            "such [MASK] as [X] or [Z]",
            "[X], [Z] or other [MASK]",
            "[X], [Z] and other [MASK]",
            "[MASK] including [X] and [Z]",
            "[MASK] including [X] or [Z]",
            "[MASK], especially [X] and [Z] ",
            "[MASK], especially [X] or [Z] "
        ],
        "use_dap": true,
        "anchor_target": "[X]",
        "anchor_lsp_sap": [
            "such as [X] and [MASK],",
            "such as [X] or [MASK],",
            "such as [X], [MASK],",
            "such as [X], [MASK], and",
            ", such as [X] and [MASK],",
            ", such as [X] or [MASK], ",
            "as [X] and [MASK]",
            "as [X] or [MASK]",
            "as [X], [MASK],",
            "[X], [MASK] or other",
            "[X], [MASK] and other",
            ", including [X] and [MASK]",
            ", including [X] or [MASK]",
            ", including [X], [MASK],",
            ", including [X], [MASK], and",
            ", including [X], [MASK], or",
            ", especially [X] and [MASK] ,",
            ", especially [X] or [MASK] ,",
            ", especially [X], [MASK] ,",
            ", especially [X], [MASK] , and"
        ]
    }
}
Processing IsA ... data/clsb/blank//IsA.jsonl
#Test_instances: 522
	 step1: get anchors (fill and filter)
--- def_sap
--- lsp_sap
input_word: aeroplane token: aircraft
path_score 0 <class 'int'>
new_score 0.18197841849178076 <class 'float'>
input_word: aeroplane token: glider
path_score 0.3333333333333333 <class 'float'>
new_score 0.08365682985535577 <class 'float'>
input_word: aeroplane token: helicopter
path_score 0.3333333333333333 <class 'float'>
new_score 0.08648026166095708 <class 'float'>
input_word: aeroplane token: parachute
path_score 0.1 <class 'float'>
new_score 0.053641776911293466 <class 'float'>
input_word: aeroplane token: helicopters
path_score 0.3333333333333333 <class 'float'>
new_score 0.03397744718628625 <class 'float'>
input_word: aeroplane token: airplane
path_score 1 <class 'int'>
new_score 0.0645073636520752 <class 'float'>
input_word: aeroplane token: jet
path_score 0.0625 <class 'float'>
new_score 0.029152669260899225 <class 'float'>
input_word: aeroplane token: bomber
path_score 0.125 <class 'float'>
new_score 0.026049185046253517 <class 'float'>
input_word: aeroplane token: bombers
path_score 0.125 <class 'float'>
new_score 0.016842235578224063 <class 'float'>
input_word: aeroplane token: rocket
path_score 0.16666666666666666 <class 'float'>
new_score 0.01557539084127971 <class 'float'>
input_word: aeroplane token: motorcycle
path_score 0.1111111111111111 <class 'float'>
new_score 0.015447433106601238 <class 'float'>
input_word: aeroplane token: automobile
path_score 0.1111111111111111 <class 'float'>
new_score 0.03359479298815131 <class 'float'>
input_word: aeroplane token: aviation
path_score 0.0625 <class 'float'>
new_score 0.00687094044405967 <class 'float'>
input_word: aeroplane token: engine
path_score 0.125 <class 'float'>
new_score 0.005144187423866242 <class 'float'>
input_word: aeroplane token: plane
path_score 1 <class 'int'>
new_score 0.001983105088584125 <class 'float'>
input_word: aeroplane token: pilot
path_score 0.08333333333333333 <class 'float'>
new_score 0.01978948712348938 <class 'float'>
input_word: aeroplane token: later
path_score 0 <class 'int'>
new_score 0.012010081671178341 <class 'float'>
input_word: aeroplane token: boat
path_score 0.16666666666666666 <class 'float'>
new_score 0.015687089413404465 <class 'float'>
input_word: aeroplane token: ship
path_score 0.16666666666666666 <class 'float'>
new_score 0.014203530736267567 <class 'float'>
input_word: aeroplane token: motorcycles
path_score 0.1111111111111111 <class 'float'>
new_score 0.01090450119227171 <class 'float'>
input_word: aeroplane token: fighter
path_score 0.125 <class 'float'>
new_score 0.012280302587896585 <class 'float'>
input_word: aeroplane token: especially
path_score 0 <class 'int'>
new_score 0.017726141959428787 <class 'float'>
input_word: alligator token: bear
path_score 0.1111111111111111 <class 'float'>
new_score 0.06549890224491 <class 'float'>
input_word: alligator token: seal
path_score 0.2 <class 'float'>
new_score 0.034607783764262094 <class 'float'>
input_word: alligator token: turtle
path_score 0.14285714285714285 <class 'float'>
new_score 0.07622340011099975 <class 'float'>
input_word: alligator token: fish
path_score 0.14285714285714285 <class 'float'>
new_score 0.08026817472418771 <class 'float'>
input_word: alligator token: tiger
path_score 0.1 <class 'float'>
new_score 0.042552651571375985 <class 'float'>
input_word: alligator token: shark
path_score 0.1 <class 'float'>
new_score 0.034145645797252655 <class 'float'>
input_word: alligator token: crab
path_score 0.1 <class 'float'>
new_score 0.03295112106974961 <class 'float'>
input_word: alligator token: deer
path_score 0.09090909090909091 <class 'float'>
new_score 0.03130096854874864 <class 'float'>
input_word: alligator token: salmon
path_score 0.1111111111111111 <class 'float'>
new_score 0.03084208896117551 <class 'float'>
input_word: alligator token: bass
path_score 0.08333333333333333 <class 'float'>
new_score 0.025191692635416985 <class 'float'>
input_word: alligator token: cat
path_score 0.1 <class 'float'>
new_score 0.02872166261076927 <class 'float'>
input_word: alligator token: bull
path_score 0.125 <class 'float'>
new_score 0.024078466929495335 <class 'float'>
input_word: alligator token: fox
path_score 0.2 <class 'float'>
new_score 0.03102400340139866 <class 'float'>
input_word: alligator token: mole
path_score 0.1111111111111111 <class 'float'>
new_score 0.025315594859421253 <class 'float'>
input_word: alligator token: snake
path_score 0.25 <class 'float'>
new_score 0.03450328324522291 <class 'float'>
input_word: alligator token: trout
path_score 0.1111111111111111 <class 'float'>
new_score 0.03081163577735424 <class 'float'>
input_word: alligator token: diver
path_score 0.1 <class 'float'>
new_score 0.0013525153044611216 <class 'float'>
input_word: alligator token: lizard
path_score 0.2 <class 'float'>
new_score 0.01063091038460178 <class 'float'>
input_word: alligator token: frog
path_score 0.14285714285714285 <class 'float'>
new_score 0.06374245136976242 <class 'float'>
input_word: alligator token: duck
path_score 0.1 <class 'float'>
new_score 0.02231994830071926 <class 'float'>
input_word: alligator token: monkey
path_score 0.1111111111111111 <class 'float'>
new_score 0.01485386909916997 <class 'float'>
input_word: alligator token: whale
path_score 0.1 <class 'float'>
new_score 0.028307173401117325 <class 'float'>
input_word: alligator token: shrimp
path_score 0.09090909090909091 <class 'float'>
new_score 0.021069037728011608 <class 'float'>
input_word: alligator token: turtles
path_score 0.14285714285714285 <class 'float'>
new_score 0.03338966146111488 <class 'float'>
input_word: alligator token: rabbit
path_score 0.2 <class 'float'>
new_score 0.02106170356273651 <class 'float'>
input_word: alligator token: maybe
path_score 0 <class 'int'>
new_score 0.012556485831737518 <class 'float'>
input_word: ambulance token: police
path_score 0.05555555555555555 <class 'float'>
new_score 0.041382500405112904 <class 'float'>
input_word: ambulance token: fire
path_score 0.07142857142857142 <class 'float'>
new_score 0.07287418944594849 <class 'float'>
input_word: ambulance token: transport
path_score 0.125 <class 'float'>
new_score 0.024812649186060298 <class 'float'>
input_word: ambulance token: buses
path_score 0.3333333333333333 <class 'float'>
new_score 0.031379902424911656 <class 'float'>
input_word: ambulance token: helicopter
path_score 0.1 <class 'float'>
new_score 0.036943716171663254 <class 'float'>
input_word: ambulance token: bus
path_score 0.3333333333333333 <class 'float'>
new_score 0.026266781458010275 <class 'float'>
input_word: ambulance token: aircraft
path_score 0.125 <class 'float'>
new_score 0.020363154510656994 <class 'float'>
input_word: ambulance token: radio
path_score 0.1 <class 'float'>
new_score 0.01457341993227601 <class 'float'>
input_word: ambulance token: train
path_score 0.1111111111111111 <class 'float'>
new_score 0.023722709994763135 <class 'float'>
input_word: ambulance token: car
path_score 0.16666666666666666 <class 'float'>
new_score 0.031465017078776976 <class 'float'>
input_word: ambulance token: taxi
path_score 0.3333333333333333 <class 'float'>
new_score 0.020532081524531048 <class 'float'>
input_word: ambulance token: vehicle
path_score 0.1111111111111111 <class 'float'>
new_score 0.025008315841356914 <class 'float'>
input_word: ambulance token: telephone
path_score 0.1 <class 'float'>
new_score 0.018462052568793297 <class 'float'>
input_word: ambulance token: truck
path_score 0.25 <class 'float'>
new_score 0.014887467958033085 <class 'float'>
input_word: ambulance token: motorcycles
path_score 0.25 <class 'float'>
new_score 0.028016057331115007 <class 'float'>
input_word: ambulance token: helicopters
path_score 0.1 <class 'float'>
new_score 0.017132466658949852 <class 'float'>
input_word: ambulance token: driver
path_score 0.07692307692307693 <class 'float'>
new_score 0.008942581313021947 <class 'float'>
input_word: ambulance token: service
path_score 0.08333333333333333 <class 'float'>
new_score 0.0010581319802440703 <class 'float'>
input_word: ambulance token: passenger
path_score 0.07142857142857142 <class 'float'>
new_score 0.004358664977189619 <class 'float'>
input_word: ambulance token: hospital
path_score 0.08333333333333333 <class 'float'>
new_score 0.007626554841408506 <class 'float'>
input_word: ambulance token: later
path_score 0 <class 'int'>
new_score 0.013607117347419262 <class 'float'>
input_word: ambulance token: pilot
path_score 0.08333333333333333 <class 'float'>
new_score 0.012618313543498516 <class 'float'>
input_word: ambulance token: doctor
path_score 0.06666666666666667 <class 'float'>
new_score 0.008733092807233334 <class 'float'>
input_word: ambulance token: conductor
path_score 0.1111111111111111 <class 'float'>
new_score 0.007542913779616356 <class 'float'>
input_word: ambulance token: wounded
path_score 0.0625 <class 'float'>
new_score 0.005479880608618259 <class 'float'>
input_word: ambulance token: motorcycle
path_score 0.25 <class 'float'>
new_score 0.01757552536825339 <class 'float'>
input_word: ambulance token: plane
path_score 0.1 <class 'float'>
new_score 0.015282917767763138 <class 'float'>
input_word: ambulance token: maintenance
path_score 0.05263157894736842 <class 'float'>
new_score 0.0031522938515990973 <class 'float'>
input_word: ambulance token: generator
path_score 0.1 <class 'float'>
new_score 0.018481120467185974 <class 'float'>
input_word: ambulance token: medical
path_score 0.047619047619047616 <class 'float'>
new_score 0.017500488087534904 <class 'float'>
input_word: ambulance token: water
path_score 0.1 <class 'float'>
new_score 0.012186159379780293 <class 'float'>
input_word: ambulance token: ferry
path_score 0.1 <class 'float'>
new_score 0.012793568894267082 <class 'float'>
input_word: ambulance token: trains
path_score 0.1111111111111111 <class 'float'>
new_score 0.022655675187706947 <class 'float'>
input_word: anchor token: cable
path_score 0.3333333333333333 <class 'float'>
new_score 0.031061688221858015 <class 'float'>
input_word: anchor token: reporter
path_score 0.07692307692307693 <class 'float'>
new_score 0.07353820935823023 <class 'float'>
input_word: anchor token: receiver
path_score 0.14285714285714285 <class 'float'>
new_score 0.009776444872841239 <class 'float'>
input_word: anchor token: camera
path_score 0.1111111111111111 <class 'float'>
new_score 0.01868689029943198 <class 'float'>
input_word: anchor token: crew
path_score 0.08333333333333333 <class 'float'>
new_score 0.015112228070696196 <class 'float'>
input_word: anchor token: mast
path_score 0.1 <class 'float'>
new_score 0.01777144538407976 <class 'float'>
input_word: anchor token: antenna
path_score 0.14285714285714285 <class 'float'>
new_score 0.010202617074052492 <class 'float'>
input_word: anchor token: line
path_score 0.14285714285714285 <class 'float'>
new_score 0.010018781351391226 <class 'float'>
input_word: anchor token: beam
path_score 0.125 <class 'float'>
new_score 0.010475508170202374 <class 'float'>
input_word: anchor token: rope
path_score 0.25 <class 'float'>
new_score 0.021035760774144104 <class 'float'>
input_word: anchor token: chain
path_score 0.3333333333333333 <class 'float'>
new_score 0.014274149977912506 <class 'float'>
input_word: anchor token: net
path_score 0.14285714285714285 <class 'float'>
new_score 0.013613230859239897 <class 'float'>
input_word: anchor token: hook
path_score 0.3333333333333333 <class 'float'>
new_score 0.015546990558505058 <class 'float'>
input_word: anchor token: pole
path_score 0.125 <class 'float'>
new_score 0.012279301571349302 <class 'float'>
input_word: anchor token: wire
path_score 0.3333333333333333 <class 'float'>
new_score 0.012686077505350113 <class 'float'>
input_word: anchor token: pilot
path_score 0.1111111111111111 <class 'float'>
new_score 0.007550633396022022 <class 'float'>
input_word: anchor token: clock
path_score 0.1111111111111111 <class 'float'>
new_score 0.009392917156219482 <class 'float'>
input_word: anchor token: helicopter
path_score 0.08333333333333333 <class 'float'>
new_score 0.010279850754886865 <class 'float'>
input_word: anchor token: logo
path_score 0.07142857142857142 <class 'float'>
new_score 0.016424119798466565 <class 'float'>
input_word: anchor token: radio
path_score 0.1111111111111111 <class 'float'>
new_score 0.012126642558723689 <class 'float'>
input_word: anchor token: float
path_score 0.125 <class 'float'>
new_score 0.013641941826790571 <class 'float'>
input_word: anchor token: correspondent
path_score 0.2 <class 'float'>
new_score 0.02367843087995425 <class 'float'>
input_word: anchor token: contributor
path_score 0.16666666666666666 <class 'float'>
new_score 0.0008623064495623112 <class 'float'>
input_word: anchor token: host
path_score 0.14285714285714285 <class 'float'>
new_score 0.033514354377985 <class 'float'>
input_word: anchor token: producer
path_score 0.14285714285714285 <class 'float'>
new_score 0.021664613857865334 <class 'float'>
input_word: anchor token: director
path_score 0.1111111111111111 <class 'float'>
new_score 0.008509703795425594 <class 'float'>
input_word: anchor token: writer
path_score 0.2 <class 'float'>
new_score 0.013672981411218643 <class 'float'>
input_word: anchor token: presenter
path_score 0.2 <class 'float'>
new_score 0.01234800461679697 <class 'float'>
input_word: anchor token: photographer
path_score 0.125 <class 'float'>
new_score 0.011565913911908865 <class 'float'>
input_word: anchor token: voice
path_score 0.14285714285714285 <class 'float'>
new_score 0.01139853149652481 <class 'float'>
input_word: anchor token: cord
path_score 0.25 <class 'float'>
new_score 0.014954933896660805 <class 'float'>
input_word: anchor token: post
path_score 0.2 <class 'float'>
new_score 0.010449856985360384 <class 'float'>
input_word: anchor token: balloon
path_score 0.1111111111111111 <class 'float'>
new_score 0.009739763103425503 <class 'float'>
input_word: anchor token: remote
path_score 0.16666666666666666 <class 'float'>
new_score 0.011425571516156197 <class 'float'>
input_word: anchor token: satellite
path_score 0.14285714285714285 <class 'float'>
new_score 0.008055459707975388 <class 'float'>
input_word: anchor token: magazine
path_score 0.2 <class 'float'>
new_score 0.008781125769019127 <class 'float'>
input_word: anchor token: weather
path_score 0.07692307692307693 <class 'float'>
new_score 0.016554525587707758 <class 'float'>
input_word: anchor token: driver
path_score 0.14285714285714285 <class 'float'>
new_score 0.008802706375718117 <class 'float'>
input_word: anchor token: news
path_score 0.08333333333333333 <class 'float'>
new_score 0.014425418339669704 <class 'float'>
input_word: anchor token: studio
path_score 0.09090909090909091 <class 'float'>
new_score 0.00761812087148428 <class 'float'>
input_word: anchor token: tower
path_score 0.1111111111111111 <class 'float'>
new_score 0.011010729242116213 <class 'float'>
input_word: anchor token: sail
path_score 0.1111111111111111 <class 'float'>
new_score 0.010894005186855793 <class 'float'>
input_word: ant token: spider
path_score 0.16666666666666666 <class 'float'>
new_score 0.0345668112499612 <class 'float'>
input_word: ant token: bee
path_score 0.3333333333333333 <class 'float'>
new_score 0.029886720178183168 <class 'float'>
input_word: ant token: mouse
path_score 0.1111111111111111 <class 'float'>
new_score 0.021719373801412683 <class 'float'>
input_word: ant token: plant
path_score 0.125 <class 'float'>
new_score 0.029965469613671303 <class 'float'>
input_word: ant token: ants
path_score 1 <class 'int'>
new_score 0.02647264200641075 <class 'float'>
input_word: ant token: insect
path_score 0.0625 <class 'float'>
new_score 0.029296033683099916 <class 'float'>
input_word: ant token: bug
path_score 0.25 <class 'float'>
new_score 0.021583477811266977 <class 'float'>
input_word: ant token: beetle
path_score 0.25 <class 'float'>
new_score 0.01832803080861385 <class 'float'>
input_word: ant token: fly
path_score 0.2 <class 'float'>
new_score 0.0174265936948359 <class 'float'>
input_word: ant token: lizard
path_score 0.08333333333333333 <class 'float'>
new_score 0.01934862043708563 <class 'float'>
input_word: ant token: moth
path_score 0.2 <class 'float'>
new_score 0.012316047737840563 <class 'float'>
input_word: ant token: bird
path_score 0.1111111111111111 <class 'float'>
new_score 0.011143765722711882 <class 'float'>
input_word: ant token: var
path_score 0.05263157894736842 <class 'float'>
new_score 0.012900631874799728 <class 'float'>
input_word: ant token: flower
path_score 0.08333333333333333 <class 'float'>
new_score 0.013598085381090641 <class 'float'>
input_word: ant token: fungus
path_score 0.125 <class 'float'>
new_score 0.012745087966322899 <class 'float'>
input_word: ant token: bees
path_score 0.3333333333333333 <class 'float'>
new_score 0.013747314922511578 <class 'float'>
input_word: ant token: snake
path_score 0.1 <class 'float'>
new_score 0.012792930006980896 <class 'float'>
input_word: apple token: cherry
path_score 0.3333333333333333 <class 'float'>
new_score 0.12426399902495391 <class 'float'>
input_word: apple token: grape
path_score 0.3333333333333333 <class 'float'>
new_score 0.06978265022238096 <class 'float'>
input_word: apple token: fruit
path_score 0.08333333333333333 <class 'float'>
new_score 0.03159369750708146 <class 'float'>
input_word: apple token: lemon
path_score 0.25 <class 'float'>
new_score 0.03888605547447999 <class 'float'>
input_word: apple token: apples
path_score 1 <class 'int'>
new_score 0.030968209129891226 <class 'float'>
input_word: apple token: potato
path_score 0.16666666666666666 <class 'float'>
new_score 0.032084464325299974 <class 'float'>
input_word: apple token: grapes
path_score 0.3333333333333333 <class 'float'>
new_score 0.02647610740470035 <class 'float'>
input_word: apple token: banana
path_score 0.3333333333333333 <class 'float'>
new_score 0.019547398388385772 <class 'float'>
input_word: apple token: lime
path_score 0.25 <class 'float'>
new_score 0.01907558599486947 <class 'float'>
input_word: apple token: tomato
path_score 0.16666666666666666 <class 'float'>
new_score 0.022116659039800816 <class 'float'>
input_word: apple token: cheese
path_score 0.2 <class 'float'>
new_score 0.015052108094096184 <class 'float'>
input_word: apple token: jam
path_score 0.07142857142857142 <class 'float'>
new_score 0.01821082830429077 <class 'float'>
input_word: apple token: red
path_score 0.09090909090909091 <class 'float'>
new_score 0.0004286842595320195 <class 'float'>
input_word: apple token: honey
path_score 0.09090909090909091 <class 'float'>
new_score 0.021886474452912807 <class 'float'>
input_word: apple token: tree
path_score 0.07142857142857142 <class 'float'>
new_score 0.009504269808530807 <class 'float'>
input_word: apple token: orange
path_score 0.25 <class 'float'>
new_score 0.021467959508299828 <class 'float'>
input_word: apple token: pepper
path_score 0.16666666666666666 <class 'float'>
new_score 0.022669043391942978 <class 'float'>
input_word: apple token: leaves
path_score 0.16666666666666666 <class 'float'>
new_score 0.002078986493870616 <class 'float'>
input_word: apple token: vegetables
path_score 0.25 <class 'float'>
new_score 0.0014216334093362093 <class 'float'>
input_word: apple token: bean
path_score 0.2 <class 'float'>
new_score 0.013957599177956581 <class 'float'>
input_word: apple token: potatoes
path_score 0.16666666666666666 <class 'float'>
new_score 0.02048560045659542 <class 'float'>
input_word: apple token: tobacco
path_score 0.1111111111111111 <class 'float'>
new_score 0.017894426360726357 <class 'float'>
input_word: apple token: berries
path_score 0.3333333333333333 <class 'float'>
new_score 0.020319342613220215 <class 'float'>
input_word: apricot token: coffee
path_score 0.2 <class 'float'>
new_score 0.059969062014715746 <class 'float'>
input_word: apricot token: chocolate
path_score 0.2 <class 'float'>
new_score 0.05285051775475343 <class 'float'>
input_word: apricot token: apple
path_score 0.3333333333333333 <class 'float'>
new_score 0.04993492963590792 <class 'float'>
input_word: apricot token: orange
path_score 0.25 <class 'float'>
new_score 0.05685366430649689 <class 'float'>
input_word: apricot token: cotton
path_score 0.14285714285714285 <class 'float'>
new_score 0.028862271302690107 <class 'float'>
input_word: apricot token: tobacco
path_score 0.125 <class 'float'>
new_score 0.023471783380955458 <class 'float'>
input_word: apricot token: apples
path_score 0.3333333333333333 <class 'float'>
new_score 0.02791391289792955 <class 'float'>
input_word: apricot token: cherry
path_score 0.3333333333333333 <class 'float'>
new_score 0.03241822725305191 <class 'float'>
input_word: apricot token: lemon
path_score 0.25 <class 'float'>
new_score 0.026128436749180157 <class 'float'>
input_word: apricot token: tea
path_score 0.14285714285714285 <class 'float'>
new_score 0.021898583276197314 <class 'float'>
input_word: apricot token: mint
path_score 0.125 <class 'float'>
new_score 0.03294353491880677 <class 'float'>
input_word: apricot token: rice
path_score 0.09090909090909091 <class 'float'>
new_score 0.015068701468408108 <class 'float'>
input_word: apricot token: garlic
path_score 0.1 <class 'float'>
new_score 0.021341822110116482 <class 'float'>
input_word: apricot token: cheese
path_score 0.2 <class 'float'>
new_score 0.017929671332240105 <class 'float'>
input_word: apricot token: maple
path_score 0.25 <class 'float'>
new_score 0.024782323588927586 <class 'float'>
input_word: apricot token: white
path_score 0.16666666666666666 <class 'float'>
new_score 0.005944337957771495 <class 'float'>
input_word: apricot token: red
path_score 0.25 <class 'float'>
new_score 0.0044049515927326865 <class 'float'>
input_word: apricot token: green
path_score 0.25 <class 'float'>
new_score 0.009987671030103229 <class 'float'>
input_word: apricot token: black
path_score 0.16666666666666666 <class 'float'>
new_score 0.000618293765000999 <class 'float'>
input_word: apricot token: wine
path_score 0.16666666666666666 <class 'float'>
new_score 0.015880460230012734 <class 'float'>
input_word: apricot token: blue
path_score 0.25 <class 'float'>
new_score 0.011524342000484467 <class 'float'>
input_word: apricot token: beer
path_score 0.08333333333333333 <class 'float'>
new_score 0.010222730226814747 <class 'float'>
input_word: apricot token: yellow
path_score 0.25 <class 'float'>
new_score 0.00949446763843298 <class 'float'>
input_word: apricot token: grape
path_score 0.3333333333333333 <class 'float'>
new_score 0.03785140812397003 <class 'float'>
input_word: apricot token: olive
path_score 0.25 <class 'float'>
new_score 0.024482110887765883 <class 'float'>
input_word: apricot token: corn
path_score 0.14285714285714285 <class 'float'>
new_score 0.00032386460225097835 <class 'float'>
input_word: apricot token: tomato
path_score 0.16666666666666666 <class 'float'>
new_score 0.017765022814273834 <class 'float'>
input_word: apricot token: potatoes
path_score 0.16666666666666666 <class 'float'>
new_score 0.014808152802288532 <class 'float'>
input_word: apricot token: honey
path_score 0.09090909090909091 <class 'float'>
new_score 0.014265504665672779 <class 'float'>
input_word: arm token: leg
path_score 0.3333333333333333 <class 'float'>
new_score 0.2155791919457873 <class 'float'>
input_word: arm token: legs
path_score 0.3333333333333333 <class 'float'>
new_score 0.06030802188130716 <class 'float'>
input_word: arm token: shoulder
path_score 0.3333333333333333 <class 'float'>
new_score 0.08719262860617355 <class 'float'>
input_word: arm token: neck
path_score 0.2 <class 'float'>
new_score 0.031663983343885496 <class 'float'>
input_word: arm token: hand
path_score 0.2 <class 'float'>
new_score 0.040813800377209726 <class 'float'>
input_word: arm token: head
path_score 0.3333333333333333 <class 'float'>
new_score 0.02959141674052392 <class 'float'>
input_word: arm token: torso
path_score 0.16666666666666666 <class 'float'>
new_score 0.027666196537514526 <class 'float'>
input_word: arm token: body
path_score 0.25 <class 'float'>
new_score 0.04104843130335212 <class 'float'>
input_word: arm token: knee
path_score 0.3333333333333333 <class 'float'>
new_score 0.03516225749626756 <class 'float'>
input_word: arm token: foot
path_score 0.2 <class 'float'>
new_score 0.03522531293770846 <class 'float'>
input_word: arm token: wrist
path_score 0.1111111111111111 <class 'float'>
new_score 0.024813669009341136 <class 'float'>
input_word: arm token: elbow
path_score 0.3333333333333333 <class 'float'>
new_score 0.019040076062083244 <class 'float'>
input_word: arm token: chest
path_score 0.2 <class 'float'>
new_score 0.027844163899620373 <class 'float'>
input_word: arm token: thigh
path_score 0.3333333333333333 <class 'float'>
new_score 0.024060615338385105 <class 'float'>
input_word: arm token: forearm
path_score 0.3333333333333333 <class 'float'>
new_score 0.023481396958231926 <class 'float'>
input_word: arm token: shoulders
path_score 0.3333333333333333 <class 'float'>
new_score 0.012153353231648603 <class 'float'>
input_word: arm token: hands
path_score 0.2 <class 'float'>
new_score 0.02615881711244583 <class 'float'>
input_word: arm token: bone
path_score 0.1111111111111111 <class 'float'>
new_score 0.025750868022441864 <class 'float'>
input_word: arm token: hair
path_score 0.16666666666666666 <class 'float'>
new_score 0.0189953800290823 <class 'float'>
input_word: armchair token: chair
path_score 0.06666666666666667 <class 'float'>
new_score 0.2506809246321944 <class 'float'>
input_word: armchair token: chairs
path_score 0.06666666666666667 <class 'float'>
new_score 0.09453202206641435 <class 'float'>
input_word: armchair token: sofa
path_score 0.25 <class 'float'>
new_score 0.12791825005072444 <class 'float'>
input_word: armchair token: couch
path_score 0.25 <class 'float'>
new_score 0.0818972809733275 <class 'float'>
input_word: armchair token: desk
path_score 0.16666666666666666 <class 'float'>
new_score 0.0537930798665103 <class 'float'>
input_word: armchair token: table
path_score 0.2 <class 'float'>
new_score 0.051568935671821234 <class 'float'>
input_word: armchair token: bed
path_score 0.16666666666666666 <class 'float'>
new_score 0.024936629521350066 <class 'float'>
input_word: armchair token: seat
path_score 0.1 <class 'float'>
new_score 0.013684620498679578 <class 'float'>
input_word: armchair token: bench
path_score 0.25 <class 'float'>
new_score 0.010860063239104219 <class 'float'>
input_word: armchair token: stool
path_score 0.25 <class 'float'>
new_score 0.010827965917997062 <class 'float'>
input_word: armchair token: lounge
path_score 0.25 <class 'float'>
new_score 0.008368191891349852 <class 'float'>
input_word: armchair token: throne
path_score 0.25 <class 'float'>
new_score 0.007056663278490305 <class 'float'>
input_word: armchair token: maybe
path_score 0 <class 'int'>
new_score 0.016310814302414656 <class 'float'>
input_word: armchair token: blanket
path_score 0.1111111111111111 <class 'float'>
new_score 0.00654820678755641 <class 'float'>
input_word: armchair token: tables
path_score 0.2 <class 'float'>
new_score 0.00845313755174478 <class 'float'>
input_word: armchair token: piano
path_score 0.1 <class 'float'>
new_score 0.008030275309768816 <class 'float'>
input_word: armchair token: television
path_score 0.1 <class 'float'>
new_score 0.007648240774869919 <class 'float'>
input_word: armchair token: furniture
path_score 0 <class 'int'>
new_score 0.006646637863013893 <class 'float'>
input_word: armchair token: gallery
path_score 0.1 <class 'float'>
new_score 0.0010594413615763187 <class 'float'>
input_word: armchair token: wheelchair
path_score 0.3333333333333333 <class 'float'>
new_score 0.0025360884610563517 <class 'float'>
input_word: armchair token: fireplace
path_score 0.08333333333333333 <class 'float'>
new_score 0.010588016360998154 <class 'float'>
input_word: armchair token: yes
path_score 0.05 <class 'float'>
new_score 0.02753494121134281 <class 'float'>
input_word: armchair token: especially
path_score 0 <class 'int'>
new_score 0.024333380162715912 <class 'float'>
input_word: arrow token: bow
path_score 0.25 <class 'float'>
new_score 0.41953432724786627 <class 'float'>
input_word: arrow token: spear
path_score 0.25 <class 'float'>
new_score 0.10791654997121762 <class 'float'>
input_word: arrow token: sword
path_score 0.25 <class 'float'>
new_score 0.060654164230647054 <class 'float'>
input_word: arrow token: shield
path_score 0.1 <class 'float'>
new_score 0.02924747168435715 <class 'float'>
input_word: arrow token: bolt
path_score 0.1111111111111111 <class 'float'>
new_score 0.008938756111698845 <class 'float'>
input_word: arrow token: stick
path_score 0.125 <class 'float'>
new_score 0.013338993055125077 <class 'float'>
input_word: arrow token: gun
path_score 0.25 <class 'float'>
new_score 0.006295393961905079 <class 'float'>
input_word: arrow token: fire
path_score 0.1 <class 'float'>
new_score 0.00874466828203627 <class 'float'>
input_word: arrow token: stone
path_score 0.1111111111111111 <class 'float'>
new_score 0.008544048960579352 <class 'float'>
input_word: arrow token: dagger
path_score 0.2 <class 'float'>
new_score 0.010063329653348774 <class 'float'>
input_word: arrow token: hammer
path_score 0.125 <class 'float'>
new_score 0.008119022357277572 <class 'float'>
input_word: arrow token: dart
path_score 0.3333333333333333 <class 'float'>
new_score 0.008542336290702224 <class 'float'>
input_word: arrow token: shot
path_score 0.3333333333333333 <class 'float'>
new_score 0.015541080851107836 <class 'float'>
input_word: arrow token: bullet
path_score 0.3333333333333333 <class 'float'>
new_score 0.011401599273085594 <class 'float'>
input_word: arrow token: arrows
path_score 1 <class 'int'>
new_score 0.015384299505967647 <class 'float'>
input_word: arrow token: heart
path_score 0.09090909090909091 <class 'float'>
new_score 0.009190244600176811 <class 'float'>
input_word: arrow token: foot
path_score 0.14285714285714285 <class 'float'>
new_score 0.009255507960915565 <class 'float'>
input_word: arrow token: bird
path_score 0.1 <class 'float'>
new_score 0.00785494945012033 <class 'float'>
input_word: arrow token: compass
path_score 0.16666666666666666 <class 'float'>
new_score 0.008976348210126162 <class 'float'>
input_word: arrow token: shields
path_score 0.1 <class 'float'>
new_score 0.0029377946630120277 <class 'float'>
input_word: arrow token: head
path_score 0.3333333333333333 <class 'float'>
new_score 0.0026346417143940926 <class 'float'>
input_word: arrow token: drums
path_score 0.125 <class 'float'>
new_score 0.0023979833349585533 <class 'float'>
input_word: arrow token: horse
path_score 0.1 <class 'float'>
new_score 0.003564815386198461 <class 'float'>
input_word: arrow token: ball
path_score 0.25 <class 'float'>
new_score 0.0037116091698408127 <class 'float'>
input_word: arrow token: rifle
path_score 0.16666666666666666 <class 'float'>
new_score 0.005488543771207333 <class 'float'>
input_word: arrow token: bows
path_score 0.25 <class 'float'>
new_score 0.021188808605074883 <class 'float'>
input_word: arrow token: pistol
path_score 0.16666666666666666 <class 'float'>
new_score 0.0029363881330937147 <class 'float'>
relation: IsA 	 use_dap: True
	 step2: insert anchors
	 step3: fill mask in dap anchors
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:00<00:02,  4.07it/s] 20%|██        | 2/10 [00:00<00:01,  4.14it/s] 30%|███       | 3/10 [00:00<00:01,  4.21it/s] 40%|████      | 4/10 [00:00<00:01,  4.22it/s] 50%|█████     | 5/10 [00:01<00:01,  4.23it/s] 60%|██████    | 6/10 [00:01<00:00,  4.25it/s] 70%|███████   | 7/10 [00:01<00:00,  4.09it/s] 80%|████████  | 8/10 [00:01<00:00,  4.14it/s] 90%|█████████ | 9/10 [00:02<00:00,  4.17it/s]100%|██████████| 10/10 [00:02<00:00,  4.20it/s]100%|██████████| 10/10 [00:02<00:00,  4.18it/s]
  0%|          | 0/10 [00:00<?, ?it/s] 10%|█         | 1/10 [00:01<00:10,  1.16s/it] 20%|██        | 2/10 [00:02<00:09,  1.15s/it] 30%|███       | 3/10 [00:03<00:07,  1.11s/it] 40%|████      | 4/10 [00:04<00:06,  1.08s/it] 50%|█████     | 5/10 [00:05<00:05,  1.07s/it] 60%|██████    | 6/10 [00:06<00:04,  1.06s/it] 70%|███████   | 7/10 [00:07<00:03,  1.10s/it] 80%|████████  | 8/10 [00:08<00:02,  1.08s/it] 90%|█████████ | 9/10 [00:09<00:01,  1.07s/it]100%|██████████| 10/10 [00:10<00:00,  1.06s/it]100%|██████████| 10/10 [00:10<00:00,  1.08s/it]
   uuid  sub_label                                          obj_label                                   masked_sentences                                       feature_type relation  sub_position                                            def_sap                                            def_dap                                            lsp_sap                                            lsp_dap                                     anchor_lsp_sap                                  obj_mask_sentence                            obj_mask_sentence_score                                   obj_mask_def_sap                             obj_mask_def_sap_score                                   obj_mask_lsp_sap                             obj_mask_lsp_sap_score                                       subj_anchors                                 subj_anchors_score                           def_dap_with_subj_anchor                           lsp_dap_with_subj_anchor  \
0     0  aeroplane                                          [vehicle]                        [An aeroplane is a [MASK].]                                        [taxonomic]      IsA             3  [An aeroplane is a [MASK]., An aeroplane is an...  [An aeroplane or [Z] is a [MASK]., An aeroplan...  [[MASK] such as aeroplane, , [MASK], such as a...  [[MASK] such as aeroplane and [Z], [MASK] such...  [such as aeroplane and [MASK],, such as aeropl...  [aircraft, glider, vehicle, helicopter, plane,...  {'aircraft': 0.16430030763149261, 'glider': 0....  [aircraft, glider, automobile, vehicle, airpla...  {'aircraft': 0.40856676548719406, 'glider': 0....  [aircraft, things, devices, weapons, systems, ...  {'aircraft': 0.12224372875223505, 'things': 0....  [airplane, plane, helicopter, glider, helicopt...  {'airplane': 1.0645073636520752, 'plane': 1.00...  [An aeroplane or airplane is a [MASK]., An aer...  [[MASK] such as aeroplane and airplane, [MASK]...   
1     1  alligator  [reptile, animal, carnivore, predator, amphibian]  [An alligator is a [MASK]., An alligator is an...  [taxonomic, taxonomic, functional, taxonomic, ...      IsA             3  [An alligator is a [MASK]., An alligator is an...  [An alligator or [Z] is a [MASK]., An alligato...  [[MASK] such as alligator, , [MASK], such as a...  [[MASK] such as alligator and [Z], [MASK] such...  [such as alligator and [MASK],, such as alliga...  [animal, fish, predator, species, turtle, aqua...  {'animal': 0.6988474130630493, 'fish': 0.13977...  [animal, fish, predator, species, turtle, aqua...  {'animal': 0.6988474130630493, 'fish': 0.13977...  [things, animals, fish, wildlife, species, cre...  {'things': 0.08186548948287964, 'animals': 0.0...                   [snake, seal, fox, fish, rabbit]  {'snake': 0.2845032832452229, 'seal': 0.234607...  [An alligator or snake is a [MASK]., An alliga...  [[MASK] such as alligator and snake, [MASK] su...   
2     2  ambulance                                     [vehicle, van]                        [An ambulance is a [MASK].]                             [taxonomic, taxonomic]      IsA             3  [An ambulance is a [MASK]., An ambulance is an...  [An ambulance or [Z] is a [MASK]., An ambulanc...  [[MASK] such as ambulance, , [MASK], such as a...  [[MASK] such as ambulance and [Z], [MASK] such...  [such as ambulance and [MASK],, such as ambula...  [vehicle, service, hospital, car, unit, transp...  {'vehicle': 0.12793311476707458, 'service': 0....  [automobile, vehicle, service, hospital, car, ...  {'automobile': 0.14307419955730438, 'vehicle':...  [things, transport, services, vehicles, emerge...  {'things': 0.19632790982723236, 'transport': 0...        [buses, bus, taxi, motorcycles, motorcycle]  {'buses': 0.364713235758245, 'bus': 0.35960011...  [An ambulance or buses is a [MASK]., An ambula...  [[MASK] such as ambulance and buses, [MASK] su...   
3     3     anchor                                           [symbol]                           [An anchor is a [MASK].]                                    [encyclopaedic]      IsA             3  [An anchor is a [MASK]., An anchor is an [MASK].]  [An anchor or [Z] is a [MASK]., An anchor or [...  [[MASK] such as anchor, , [MASK], such as anch...  [[MASK] such as anchor and [Z], [MASK] such as...  [such as anchor and [MASK],, such as anchor or...  [vessel, person, ship, mast, boat, device, bui...  {'vessel': 0.039877112954854965, 'person': 0.0...  [object, vessel, person, ship, mast, boat, dev...  {'object': 0.046549707651138306, 'vessel': 0.0...  [things, devices, terms, items, examples, equi...  {'things': 0.058324928395450115, 'devices': 0....                   [cable, hook, chain, wire, rope]  {'cable': 0.3643950215551913, 'hook': 0.348880...  [An anchor or cable is a [MASK]., An anchor or...  [[MASK] such as anchor and cable, [MASK] such ...   
4     4        ant                  [insect, animal, pest, arthropod]        [An ant is a [MASK]., An ant is an [MASK].]   [taxonomic, taxonomic, encyclopaedic, taxonomic]      IsA             3        [An ant is a [MASK]., An ant is an [MASK].]  [An ant or [Z] is a [MASK]., An ant or [Z] is ...  [[MASK] such as ant, , [MASK], such as ant, , ...  [[MASK] such as ant and [Z], [MASK] such as an...  [such as ant and [MASK],, such as ant or [MASK...  [insect, species, animal, noun, person, beetle...  {'insect': 0.1050584465265274, 'species': 0.05...  [insect, species, animal, noun, person, beetle...  {'insect': 0.1050584465265274, 'species': 0.05...  [things, creatures, species, ants, animals, in...  {'things': 0.1056923692425092, 'creatures': 0....                     [ants, bee, bees, bug, beetle]  {'ants': 1.0264726420064108, 'bee': 0.36322005...  [An ant or ants is a [MASK]., An ant or bee is...  [[MASK] such as ant and ants, [MASK] such as a...   

                               subj_anchors_combined                                   obj_mask_def_dap                             obj_mask_def_dap_score                                   obj_mask_lsp_dap                             obj_mask_lsp_dap_score                               obj_mask_def_sap_dap                               obj_mask_def_lsp_sap                               obj_mask_lsp_sap_dap  
0  aeroplane airplane plane helicopter glider hel...  [aircraft, helicopter, glider, vehicle, automo...  {'aircraft': 0.4487117253243923, 'helicopter':...  [things, aircraft, applications, examples, dev...  {'things': 0.23073824048042296, 'aircraft': 0....  [aircraft, helicopter, glider, vehicle, automo...  [aircraft, glider, things, vehicle, helicopter...  [things, aircraft, devices, applications, syst...  
1               alligator snake seal fox fish rabbit  [seal, animal, fish, snake, species, rabbit, p...  {'seal': 0.8914724588394165, 'animal': 0.78171...  [animals, wildlife, species, things, fish, cre...  {'animals': 0.1791175627888097, 'wildlife': 0....  [animal, seal, fish, species, predator, snake,...  [animal, fish, species, things, animals, wildl...  [animals, wildlife, things, fish, species, cre...  
2    ambulance buses bus taxi motorcycles motorcycle  [automobile, vehicle, ambulance, motorcycle, t...  {'automobile': 0.4484144526068121, 'vehicle': ...  [vehicles, things, services, transport, equipm...  {'vehicles': 0.1438345169236013, 'things': 0.1...  [vehicle, automobile, ambulance, motorcycle, s...  [things, vehicle, transport, services, vehicle...  [things, vehicles, services, transport, equipm...  
3                  anchor cable hook chain wire rope  [anchor, device, object, wire, rope, cable, ho...  {'anchor': 0.44935211003758013, 'device': 0.17...  [things, tv, equipment, devices, terms, televi...  {'things': 0.10623518787324429, 'tv': 0.099106...  [anchor, device, object, wire, rope, cable, ho...  [things, devices, terms, vessel, person, items...  [things, devices, terms, tv, equipment, televi...  
4                       ant ants bee bees bug beetle  [ant, species, insect, animal, organism, genus...  {'ant': 0.2606773069128394, 'species': 0.26031...  [things, species, animals, insects, ants, crea...  {'things': 0.1324032123877921, 'species': 0.10...  [insect, species, ant, animal, organism, noun,...  [species, things, insect, creatures, animal, a...  [things, species, animals, creatures, ants, in...  
               mask_type  p@1  p@10 relation   mrr  mAP@1    mAP@10
0          mask_sentence  0.4   0.7      IsA  50.3    0.5  0.548333
1           mask_def_sap  0.2   0.7      IsA  39.2    0.3  0.454167
2           mask_lsp_sap  0.0   0.3      IsA   8.1    0.0  0.093333
3           mask_def_dap  0.0   0.7      IsA  29.2    0.0  0.339286
4           mask_lsp_dap  0.1   0.3      IsA  14.3    0.1  0.143333
5       mask_def_sap_dap  0.3   0.7      IsA  45.0    0.4  0.495000
6       mask_def_lsp_sap  0.2   0.6      IsA  32.1    0.3  0.352738
7       mask_lsp_sap_dap  0.1   0.4      IsA  14.9    0.1  0.148571
8   mask_def_sap_uniform  0.2   0.7      IsA  39.2    0.3  0.454167
9   mask_lsp_sap_uniform  0.2   0.5      IsA  26.7    0.2  0.265893
10  mask_def_dap_uniform  0.0   0.7      IsA  29.2    0.0  0.339286
11  mask_lsp_dap_uniform  0.3   0.7      IsA  38.8    0.4  0.423333
save log/bert-base-cased/blank/df_all_use_global_dap_True_anchor_type_Coordinate_concate_or_single_max_anchor_num_5_anchor_scorer_probAvg.csv
save log/bert-base-cased/blank/exp_data_results_anchor_type_Coordinate_concate_or_single_max_anchor_num_5_anchor_scorer_probAvg.csv
